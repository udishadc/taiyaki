# The two mapped read files mapped_reads_0.hdf5 and mapped_reads_1.hdf5 are used in the acceptance test
# test_merge_mappedsignalfiles.py.
# They contain 2 and 5 reads respectively from the walkthrough data set.
# They were created using the following sequence of commands on the walkthrough set:
# (These commands will be needed to recreate the test data if the mapping format is changed again!)

# Map only reads with filenames ending _0.fastq
minimap2 -I 16G -x map-ont -t 32 -a --secondary=no taiyaki_walkthrough/reference.fasta taiyaki_walkthrough/intermediate_files/basecalls/*_0.fastq | samtools view -bST taiyaki_walkthrough/reference.fasta - > basecalls_0.bam
# Map only reads with filenames ending _1.fastq
minimap2 -I 16G -x map-ont -t 32 -a --secondary=no taiyaki_walkthrough/reference.fasta taiyaki_walkthrough/intermediate_files/basecalls/*_1.fastq | samtools view -bST taiyaki_walkthrough/reference.fasta - > basecalls_1.bam

# Get references for filenames ending _0.fastq
taiyaki/bin/get_refs_from_sam.py taiyaki_walkthrough/reference.fasta basecalls_0.bam --min_coverage 0.8 > read_references_0.fasta
# Get references for filenames ending _1.fastq
taiyaki/bin/get_refs_from_sam.py taiyaki_walkthrough/reference.fasta basecalls_1.bam --min_coverage 0.8 > read_references_1.fasta

#Generate per read params for all files
taiyaki/bin/generate_per_read_params.py --jobs 32 taiyaki_walkthrough/reads > read_params.tsv

# Prepare a set of mapped reads from the _0 files
taiyaki/bin/prepare_mapped_reads.py  --limit 2 --jobs 32 taiyaki_walkthrough/reads read_params.tsv mapped_reads_0.hdf5 taiyaki_walkthrough/pretrained/r941_dna_minion.checkpoint read_references_0.fasta
# Prepare a set of mapped reads from the _1 files (note that 25 reads are needed to get 5 valid mappings)
taiyaki/bin/prepare_mapped_reads.py  --limit 25 --jobs 32 taiyaki_walkthrough/reads read_params.tsv mapped_reads_1.hdf5 taiyaki_walkthrough/pretrained/r941_dna_minion.checkpoint read_references_1.fasta
